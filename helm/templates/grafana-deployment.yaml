apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)        
      creationTimestamp: null
      labels:
        io.kompose.network/dashboard-timenet: "true"
        io.kompose.service: grafana
    spec:
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
      containers:
        - env:
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_LOG_LEVEL
              value: warn
            - name: GF_SECURITY_ALLOW_EMBEDDING
              value: "true"
          image: {{ .Values.dashboard.grafana.image }}
          name: grafana
          ports:
            - containerPort: 3000
              hostIP: 127.0.0.1
              hostPort: 3000
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
      restartPolicy: Always
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
status: {}
